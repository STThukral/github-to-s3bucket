AWSTemplateFormatVersion: '2010-09-09'
Resources:
  
  # S3 Bucket
  MyS3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: 'st-git-bucket'  # Change this to your unique bucket name
      NotificationConfiguration:
        EventBridgeConfiguration: {}

  # Lambda Execution Role (with permissions to read S3 and write to CloudWatch)
  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Action: 'sts:AssumeRole'
            Principal:
              Service: 'lambda.amazonaws.com'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Policies:
        - PolicyName: 'S3ReadPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 's3:GetObject'
                Resource: !Sub 'arn:aws:s3:::${MyS3Bucket}/*'

  # Lambda Function
  MyLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: 'S3EventProcessorLambda'
      Handler: 'index.handler'
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: 'python'  # You can use other runtimes such as python, java, etc.
      
  # S3 Bucket Notification to trigger Lambda on object creation
  S3BucketNotification:
    Type: 'AWS::S3::BucketNotification'
    Properties:
      Bucket: !Ref MyS3Bucket
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: 's3:ObjectCreated:*'
            Function: !GetAtt MyLambdaFunction.Arn